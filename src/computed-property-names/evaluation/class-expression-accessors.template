// Copyright (C) 2020 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/expressions/class/cpn-class-expr-accessors-
name: ComputedPropertyName in ClassExpression
esid: prod-ComputedPropertyName
info: |
  ClassExpression:
    classBindingIdentifier opt ClassTail

  ClassTail:
    ClassHeritage opt { ClassBody opt }

  ClassBody:
    ClassElementList

  ClassElementList:
    ClassElement

  ClassElement:
    MethodDefinition

  MethodDefinition:
    PropertyName ...
    get PropertyName ...
    set PropertyName ...

  PropertyName:
    ComputedPropertyName

  ComputedPropertyName:
    [ AssignmentExpression ]
---*/

let C = class {
  get [/*{ComputedPropertyName}*/]() {
    return /*{value}*/;
  }

  set [/*{ComputedPropertyName}*/](v) {
    return /*{value}*/;
  }

  static get [/*{ComputedPropertyName}*/]() {
    return /*{value}*/;
  }

  static set [/*{ComputedPropertyName}*/](v) {
    return /*{value}*/;
  }
};

let c = new C();

assert.sameValue(
  c[/*{ComputedPropertyName}*/],
  /*{value}*/
);
assert.sameValue(
  c[/*{ComputedPropertyName}*/] = /*{value}*/,
  /*{value}*/
);

assert.sameValue(
  C[/*{ComputedPropertyName}*/],
  /*{value}*/
);
assert.sameValue(
  C[/*{ComputedPropertyName}*/] = /*{value}*/,
  /*{value}*/
);
assert.sameValue(
  c[String(/*{ComputedPropertyName}*/)],
  /*{value}*/
);
assert.sameValue(
  c[String(/*{ComputedPropertyName}*/)] = /*{value}*/,
  /*{value}*/
);

assert.sameValue(
  C[String(/*{ComputedPropertyName}*/)],
  /*{value}*/
);
assert.sameValue(
  C[String(/*{ComputedPropertyName}*/)] = /*{value}*/,
  /*{value}*/
);
