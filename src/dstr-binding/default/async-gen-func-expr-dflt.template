// Copyright (C) 2017 the V8 project authors. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/expressions/async-generator/dstr/dflt-
name: async generator function expression (default parameter)
esid: sec-asyncgenerator-definitions-evaluation
features: [async-iteration]
info: |
    AsyncGeneratorExpression : async [no LineTerminator here] function * ( FormalParameters ) {
        AsyncGeneratorBody }
    
        [...]
        3. Let closure be ! AsyncGeneratorFunctionCreate(Normal, FormalParameters,
           AsyncGeneratorBody, scope, strict).
        [...]
flags: [async]
---*/

var callCount = 0;
var f;
f = async function*(/*{ elems }*/ = /*{ vals }*/) {
  /*{ body }*/
  callCount = callCount + 1;
};

f().next().then(() => {
    assert.sameValue(callCount, 1, 'invoked exactly once');
}).then($DONE, $DONE);
