// Copyright (C) 2017 the V8 project authors. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.
/*---
desc: >
    IteratorClose is not called when rest element evaluation has exhausted the
    iterator
info: |
    ArrayAssignmentPattern :
        [ AssignmentElementList , Elisionopt AssignmentRestElementopt ]

    [...]
    6. If AssignmentRestElement is present, then
       a. Let status be the result of performing
          IteratorDestructuringAssignmentEvaluation of AssignmentRestElement
          with iteratorRecord as the argument.
    7. If iteratorRecord.[[Done]] is false, return ? IteratorClose(iterator, status).
    8. Return Completion(status).

features: [Symbol.iterator]
template: async-generator
es6id: 12.14.5.2
esid: sec-runtime-semantics-destructuringassignmentevaluation
---*/

//- setup
let nextCount = 0;
let returnCount = 0;
let x, y;
let iterator = {
  next() {
    nextCount += 1;
    return { value: nextCount, done: nextCount > 1 };
  },
  return() {
    returnCount += 1;
  }
};
let iterable = {
  [Symbol.iterator]() {
    return iterator;
  }
};
//- elems
[ x , ...y ]
//- vals
iterable
//- teardown
iter.next().then(() => {
  iter.return().then(() => {
    assert.sameValue(nextCount, 2, 'nextCount');
    assert.sameValue(returnCount, 0, 'returnCount');
    assert.sameValue(x, 1, 'x');
    assert.sameValue(y.length, 0, 'y.length');
  }).then($DONE, $DONE);
}, $DONE).catch($DONE);
