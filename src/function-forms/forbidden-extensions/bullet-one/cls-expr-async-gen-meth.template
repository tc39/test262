// Copyright (C) 2020 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.
/*---
path: language/expressions/class/async-gen-method/forbidden-ext/b1/cls-expr-async-gen-meth-
name: class expression async generator method
esid: sec-class-definitions-runtime-semantics-evaluation
info: |
    ClassExpression : class BindingIdentifieropt ClassTail
features: [async-iteration]
flags: [async]
---*/

var callCount = 0;
var C = class {
  async *method(/*{ params }*/) {
    /*{ method-body }*/
    callCount++;
  }
};

C.prototype.method(/*{ args }*/).next()
  .then(_ => {
    throw new Test262Error('function should not be resolved');
  }, error => assert.sameValue(error.constructor, /*{ error }*/))
  .then(() => {
    assert.sameValue(callCount, 0, 'function body is not evaluated');
  }, $DONE)
  .then($DONE, $DONE);
