// Copyright (C) 2020 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/expressions/async-arrow-function/forbidden-ext/b1/async-arrow-function-
name: async arrow function expression
esid: sec-async-arrow-function-definitions
info: |
  AsyncArrowFunction :
    ...
    CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody

  AsyncConciseBody :
    { AsyncFunctionBody }

flags: [async]
features: [arrow-function, async-functions]
---*/

var callCount = 0;
var f;
f = async (/*{ params }*/) => {
  assert.sameValue(/*{ function-has-forbidden-property }*/, false);
  callCount++;
};

f(/*{ args }*/)
  .then(() => {
    assert.sameValue(callCount, 1, 'function body evaluated');
  }, $DONE).then($DONE, $DONE);
