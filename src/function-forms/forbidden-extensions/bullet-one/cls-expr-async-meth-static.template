// Copyright (C) 2020 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/expressions/class/async-method-static/forbidden-ext/b1/cls-expr-async-meth-static-
name: static class expression async method
esid: sec-class-definitions-runtime-semantics-evaluation
info: |
  ClassExpression : class BindingIdentifieropt ClassTail
features: [arrow-function, async-functions, class]
flags: [async]
---*/

var callCount = 0;

var C = class {
  static async method() {
    assert.sameValue(/*{ method-has-forbidden-property }*/, false);
    callCount++;
  }
};

C.method(/*{ args }*/)
  .then(() => {
    assert.sameValue(callCount, 1, 'function body evaluated');
  }, $DONE).then($DONE, $DONE);
