// Copyright (C) 2020 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/statements/class/async-method-static/forbidden-ext/b1/cls-decl-async-meth-static-
name: static class declaration async method
esid: sec-runtime-semantics-bindingclassdeclarationevaluation
info: |
    ClassDeclaration : class BindingIdentifier ClassTail
features: [async-functions]
flags: [async]
---*/

var callCount = 0;
class C {
  static async method(/*{ params }*/) {
    /*{ method-body }*/
    callCount++;
  }
}

C.method(/*{ args }*/)
  .then(_ => {
    throw new Test262Error('function should not be resolved');
  }, error => assert.sameValue(error.constructor, /*{ error }*/))
  .then(() => {
    assert.sameValue(callCount, 0, 'function body is not evaluated');
  }, $DONE)
  .then($DONE, $DONE);
