// Copyright (C) 2017 the V8 project authors. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
path: language/statements/class/async-gen-method-static/forbidden-ext/b2/cls-decl-async-gen-meth-static-
name: static class expression generator method
esid: sec-runtime-semantics-bindingclassdeclarationevaluation
info: |
    ClassDeclaration : class BindingIdentifier ClassTail
features: [async-iteration]
flags: [async]
---*/

var callCount = 0;
class C {
  static async *method(/*{ params }*/) {
    /* implicit strict */
    /*{ body }*/
    callCount++;
  }
}

C.method(/*{ args }*/).next()
  .then(_ => {
    throw new Test262Error('function should not be resolved');
  }, error => assert.sameValue(error.constructor, /*{ error }*/))
  .then(() => {
    assert.sameValue(callCount, 0, 'function body is not evaluated');
  }, $DONE)
  .then($DONE, $DONE);
