// Copyright (C) 2017 Leo Balter. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: The initializer value is defined after the class evaluation
info: |
  [[Construct]] ( argumentsList, newTarget)

  8. If kind is "base", then
    a. Perform OrdinaryCallBindThis(F, calleeContext, thisArgument).
    b. Let result be InitializeInstanceFields(thisArgument, F).
    ...
  ...
  11. Let result be OrdinaryCallEvaluateBody(F, argumentsList).
  ...
template: default
features: [class-fields-public, computed-property-names]
includes: [propertyHelper.js]
---*/

//- setup
var x = false;
//- elements
[x] = x;
//- assertions
var c1 = new C();

x = true;
var c2 = new C();

verifyProperty(c1, "false", {
  value: false,
  enumerable: true,
  configurable: true,
  writable: true,
});
verifyProperty(c2, "false", {
  value: true,
  enumerable: true,
  configurable: true,
  writable: true,
});

assert.sameValue(c1.hasOwnProperty("true"), false);
assert.sameValue(c2.hasOwnProperty("true"), false);
