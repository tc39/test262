// Copyright (C) 2022 Chengzhong Wu. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: Valid accessor FieldDefinition, ClassElementName, PropertyName Syntax
info: |
  FieldDefinition[Yield, Await] :
    accessor [no LineTerminator here] ClassElementName[?Yield, ?Await] Initializer[+In, ?Yield, ?Await]opt

template: default
features: [decorators]
---*/

//- elements
accessor
$;
static accessor
$;

//- assertions
let c = new C();

assert(
  !Object.prototype.hasOwnProperty.call(C.prototype, 'accessor'),
  "accessor doesn't appear as an own property on C prototype"
);
assert(
  !Object.prototype.hasOwnProperty.call(C.prototype, '$'),
  "$ doesn't appear as an own property on C prototype"
);
assert(
  Object.prototype.hasOwnProperty.call(C, 'accessor'),
  "C constructor has an own property accessor"
);
assert(
  !Object.prototype.hasOwnProperty.call(C, '$'),
  "$ doesn't appear as an own property on C constructor"
);
assert(
  Object.prototype.hasOwnProperty.call(c, 'accessor'),
  "C instance has an own property accessor"
);
assert(
  Object.prototype.hasOwnProperty.call(c, '$'),
  "C instance has an own property $"
);
