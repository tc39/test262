// Copyright (C) 2019 Caio Lima (Igalia SL). All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: Private static methods have length property properly configured
info: |
  Updated Productions

  ClassElement : MethodDefinition
    1. Return ClassElementEvaluation of MethodDefinition with arguments ! Get(homeObject, "prototype"),enumerable, and "prototype".

  ClassElement : static MethodDefinition
    1. Return ClassElementEvaluation of MethodDefinition with arguments homeObject, enumerable and "static".

  MethodDefinition : ClassElementName( UniqueFormalParameters ) { FunctionBody }
    1. Let methodDef be DefineMethod of MethodDefinition with argument homeObject.
    2. ReturnIfAbrupt(methodDef).
    3. Perform ? DefineOrdinaryMethod(methodDef.[[Key]], homeObject, methodDef.[[Closure]], _enumerable).

  ClassElement : MethodDefinition
  ClassElement : static MethodDefinition
    1. Perform ? PropertyDefinitionEvaluation with parameters object and enumerable.
    2. Return empty.

  MethodDefinition : ClassElementName (UniqueFormalParameters) { FunctionBody }
    ...
    8. Let closure be FunctionCreate(kind, UniqueFormalParameters, FunctionBody, scope, privateScope, strict, prototype).
    9. Perform MakeMethod(closure, object).
    10. Return the Record{[[Key]]: propKey, [[Closure]]: closure}.
template: default
features: [class-static-methods-private]
---*/

//- elements
static #method(a, b, c) {};

static getPrivateMethod() {
  return this.#method;
}

//- assertions
assert.sameValue(C.getPrivateMethod().length, 3);
