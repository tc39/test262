// Copyright (C) 2022 Chengzhong Wu. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: >
  Decorator @ DecoratorParenthesizedExpression
info: |
  DecoratorParenthesizedExpression[Yield, Await] :
    ( Expression[+In, ?Yield, ?Await] )

  PrimaryExpression[Yield, Await] :
    this
    IdentifierReference[?Yield, ?Await]
    Literal
    ArrayLiteral[?Yield, ?Await]
    ObjectLiteral[?Yield, ?Await]
    FunctionExpression
    ClassExpression[?Yield, ?Await]
    GeneratorExpression
    AsyncFunctionExpression
    AsyncGeneratorExpression
    RegularExpressionLiteral
    TemplateLiteral[?Yield, ?Await, ~Tagged]
    CoverParenthesizedExpressionAndArrowParameterList[?Yield, ?Await]

  IdentifierReference[Yield, Await] :
    [~Yield] yield
    ...
templates:
  - syntax/valid/cls-decl-decorators-valid-syntax.template
  - syntax/valid/cls-expr-decorators-valid-syntax.template

flags: [noStrict]
---*/

//- setup
function yield() {}

//- decorators
@(yield)
