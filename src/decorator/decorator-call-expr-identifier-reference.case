// Copyright (C) 2022 Chengzhong Wu. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: >
  Decorator @ DecoratorCallExpression
info: |
  DecoratorCallExpression[Yield, Await] :
    DecoratorMemberExpression[?Yield, ?Await] Arguments[?Yield, ?Await]

  DecoratorMemberExpression[Yield, Await] :
    IdentifierReference[?Yield, ?Await]
    DecoratorMemberExpression[?Yield, ?Await] . IdentifierName
    DecoratorMemberExpression[?Yield, ?Await] . PrivateIdentifier

  IdentifierReference[Yield, Await] :
    Identifier
    [~Yield] yield
    [~Await] await

template: syntax/valid
---*/

//- setup
function decorator() {
  return () => {};
}
var $ = decorator;
var _ = decorator;
var \u{6F} = decorator;
var \u2118 = decorator;
var ZW_\u200C_NJ = decorator;
var ZW_\u200D_J = decorator;
var await = decorator;

//- decorators
@$()
@_()
@\u{6F}()
@\u2118()
@ZW_\u200C_NJ()
@ZW_\u200D_J()
@await()
