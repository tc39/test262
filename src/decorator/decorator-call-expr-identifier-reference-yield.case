// Copyright (C) 2022 Chengzhong Wu. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: >
  Decorator @ DecoratorCallExpression
info: |
  DecoratorCallExpression[Yield, Await] :
    DecoratorMemberExpression[?Yield, ?Await] Arguments[?Yield, ?Await]

  DecoratorMemberExpression[Yield, Await] :
    IdentifierReference[?Yield, ?Await]
    DecoratorMemberExpression[?Yield, ?Await] . IdentifierName
    DecoratorMemberExpression[?Yield, ?Await] . PrivateIdentifier

  IdentifierReference[Yield, Await] :
    [~Yield] yield
    ...

templates:
  - syntax/valid/cls-decl-decorators-valid-syntax.template
  - syntax/valid/cls-expr-decorators-valid-syntax.template

flags: [noStrict]
---*/

//- setup
function decorator() {
  return () => {};
}
var yield = decorator;

//- decorators
@yield()
