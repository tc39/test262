
// nop.wast:3
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x98\x80\x80\x80\x00\x05\x60\x00\x00\x60\x03\x7f\x7f\x7f\x01\x7f\x60\x00\x01\x7f\x60\x01\x7f\x00\x60\x01\x7f\x01\x7f\x03\xb2\x80\x80\x80\x00\x31\x00\x01\x02\x02\x02\x02\x03\x03\x04\x04\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x03\x03\x03\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x01\x01\x01\x01\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x05\x83\x80\x80\x80\x00\x01\x00\x01\x07\xd1\x86\x80\x80\x00\x2f\x0d\x61\x73\x2d\x66\x75\x6e\x63\x2d\x66\x69\x72\x73\x74\x00\x02\x0b\x61\x73\x2d\x66\x75\x6e\x63\x2d\x6d\x69\x64\x00\x03\x0c\x61\x73\x2d\x66\x75\x6e\x63\x2d\x6c\x61\x73\x74\x00\x04\x12\x61\x73\x2d\x66\x75\x6e\x63\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x05\x0c\x61\x73\x2d\x64\x72\x6f\x70\x2d\x6c\x61\x73\x74\x00\x06\x12\x61\x73\x2d\x64\x72\x6f\x70\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x07\x0e\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x6d\x69\x64\x31\x00\x08\x0e\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x6d\x69\x64\x32\x00\x09\x0e\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x6c\x61\x73\x74\x00\x0a\x14\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x0b\x0e\x61\x73\x2d\x62\x6c\x6f\x63\x6b\x2d\x66\x69\x72\x73\x74\x00\x0c\x0c\x61\x73\x2d\x62\x6c\x6f\x63\x6b\x2d\x6d\x69\x64\x00\x0d\x0d\x61\x73\x2d\x62\x6c\x6f\x63\x6b\x2d\x6c\x61\x73\x74\x00\x0e\x13\x61\x73\x2d\x62\x6c\x6f\x63\x6b\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x0f\x0d\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x66\x69\x72\x73\x74\x00\x10\x0b\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x6d\x69\x64\x00\x11\x0c\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x6c\x61\x73\x74\x00\x12\x12\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x13\x0f\x61\x73\x2d\x69\x66\x2d\x63\x6f\x6e\x64\x69\x74\x69\x6f\x6e\x00\x14\x0a\x61\x73\x2d\x69\x66\x2d\x74\x68\x65\x6e\x00\x15\x0a\x61\x73\x2d\x69\x66\x2d\x65\x6c\x73\x65\x00\x16\x0a\x61\x73\x2d\x62\x72\x2d\x6c\x61\x73\x74\x00\x17\x10\x61\x73\x2d\x62\x72\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x18\x0c\x61\x73\x2d\x62\x72\x5f\x69\x66\x2d\x6d\x69\x64\x00\x19\x0d\x61\x73\x2d\x62\x72\x5f\x69\x66\x2d\x6c\x61\x73\x74\x00\x1a\x13\x61\x73\x2d\x62\x72\x5f\x69\x66\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x1b\x0f\x61\x73\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6d\x69\x64\x00\x1c\x10\x61\x73\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6c\x61\x73\x74\x00\x1d\x16\x61\x73\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x1e\x0e\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x6c\x61\x73\x74\x00\x1f\x14\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x20\x0c\x61\x73\x2d\x63\x61\x6c\x6c\x2d\x6d\x69\x64\x31\x00\x21\x0c\x61\x73\x2d\x63\x61\x6c\x6c\x2d\x6d\x69\x64\x32\x00\x22\x0c\x61\x73\x2d\x63\x61\x6c\x6c\x2d\x6c\x61\x73\x74\x00\x23\x12\x61\x73\x2d\x63\x61\x6c\x6c\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x24\x0d\x61\x73\x2d\x75\x6e\x61\x72\x79\x2d\x6c\x61\x73\x74\x00\x25\x13\x61\x73\x2d\x75\x6e\x61\x72\x79\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x26\x0d\x61\x73\x2d\x62\x69\x6e\x61\x72\x79\x2d\x6d\x69\x64\x00\x27\x0e\x61\x73\x2d\x62\x69\x6e\x61\x72\x79\x2d\x6c\x61\x73\x74\x00\x28\x14\x61\x73\x2d\x62\x69\x6e\x61\x72\x79\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x29\x0c\x61\x73\x2d\x74\x65\x73\x74\x2d\x6c\x61\x73\x74\x00\x2a\x12\x61\x73\x2d\x74\x65\x73\x74\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x2b\x0e\x61\x73\x2d\x63\x6f\x6d\x70\x61\x72\x65\x2d\x6d\x69\x64\x00\x2c\x0f\x61\x73\x2d\x63\x6f\x6d\x70\x61\x72\x65\x2d\x6c\x61\x73\x74\x00\x2d\x15\x61\x73\x2d\x63\x6f\x6d\x70\x61\x72\x65\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x2e\x13\x61\x73\x2d\x67\x72\x6f\x77\x5f\x6d\x65\x6d\x6f\x72\x79\x2d\x6c\x61\x73\x74\x00\x2f\x19\x61\x73\x2d\x67\x72\x6f\x77\x5f\x6d\x65\x6d\x6f\x72\x79\x2d\x65\x76\x65\x72\x79\x77\x68\x65\x72\x65\x00\x30\x0a\xea\x85\x80\x80\x00\x31\x82\x80\x80\x80\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\x6b\x6a\x0b\x85\x80\x80\x80\x00\x00\x01\x41\x01\x0b\x87\x80\x80\x80\x00\x00\x10\x00\x01\x41\x02\x0b\x87\x80\x80\x80\x00\x00\x10\x00\x41\x03\x01\x0b\x8b\x80\x80\x80\x00\x00\x01\x01\x10\x00\x01\x41\x04\x01\x01\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x01\x1a\x0b\x89\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x1a\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x01\x20\x00\x20\x00\x1b\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x00\x01\x20\x00\x1b\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x00\x20\x00\x01\x1b\x0b\x90\x80\x80\x80\x00\x00\x01\x20\x00\x01\x01\x20\x00\x01\x01\x20\x00\x01\x01\x1b\x0b\x88\x80\x80\x80\x00\x00\x02\x7f\x01\x41\x02\x0b\x0b\x8a\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x01\x41\x02\x0b\x0b\x8b\x80\x80\x80\x00\x00\x02\x7f\x01\x10\x00\x41\x03\x01\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x01\x01\x10\x00\x01\x41\x04\x01\x01\x0b\x0b\x88\x80\x80\x80\x00\x00\x03\x7f\x01\x41\x02\x0b\x0b\x8a\x80\x80\x80\x00\x00\x03\x7f\x10\x00\x01\x41\x02\x0b\x0b\x8a\x80\x80\x80\x00\x00\x03\x7f\x10\x00\x41\x03\x01\x0b\x0b\x8e\x80\x80\x80\x00\x00\x03\x7f\x01\x01\x10\x00\x01\x41\x04\x01\x01\x0b\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x01\x04\x40\x10\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x04\x40\x01\x05\x10\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x04\x40\x10\x00\x05\x01\x0b\x0b\x8a\x80\x80\x80\x00\x00\x02\x7f\x20\x00\x01\x0c\x00\x0b\x0b\x8d\x80\x80\x80\x00\x00\x02\x7f\x01\x01\x20\x00\x01\x01\x0c\x00\x0b\x0b\x8c\x80\x80\x80\x00\x00\x02\x7f\x20\x00\x01\x20\x00\x0d\x00\x0b\x0b\x8c\x80\x80\x80\x00\x00\x02\x7f\x20\x00\x20\x00\x01\x0d\x00\x0b\x0b\x91\x80\x80\x80\x00\x00\x02\x7f\x01\x01\x20\x00\x01\x01\x20\x00\x01\x01\x0d\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x20\x00\x01\x20\x00\x0e\x01\x00\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x20\x00\x20\x00\x01\x0e\x01\x00\x00\x0b\x0b\x93\x80\x80\x80\x00\x00\x02\x7f\x01\x01\x20\x00\x01\x01\x20\x00\x01\x01\x0e\x01\x00\x00\x0b\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x01\x0f\x0b\x89\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x0f\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x01\x20\x01\x20\x02\x10\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\x01\x20\x02\x10\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\x01\x10\x01\x0b\x92\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x20\x01\x01\x01\x20\x02\x01\x01\x10\x01\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x01\x68\x0b\x89\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x68\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x01\x20\x00\x6a\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x20\x00\x01\x6a\x0b\x8c\x80\x80\x80\x00\x00\x01\x20\x00\x01\x01\x20\x00\x01\x01\x6a\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x01\x45\x0b\x89\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x45\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x01\x20\x00\x47\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x20\x00\x01\x49\x0b\x8c\x80\x80\x80\x00\x00\x01\x20\x00\x01\x01\x20\x00\x01\x01\x4c\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x01\x40\x00\x0b\x8a\x80\x80\x80\x00\x00\x01\x01\x20\x00\x01\x01\x40\x00\x0b");

// nop.wast:183
assert_return(() => call($1, "as-func-first", []), 1);

// nop.wast:184
assert_return(() => call($1, "as-func-mid", []), 2);

// nop.wast:185
assert_return(() => call($1, "as-func-last", []), 3);

// nop.wast:186
assert_return(() => call($1, "as-func-everywhere", []), 4);

// nop.wast:188
assert_return(() => call($1, "as-drop-last", [0]));

// nop.wast:189
assert_return(() => call($1, "as-drop-everywhere", [0]));

// nop.wast:191
assert_return(() => call($1, "as-select-mid1", [3]), 3);

// nop.wast:192
assert_return(() => call($1, "as-select-mid2", [3]), 3);

// nop.wast:193
assert_return(() => call($1, "as-select-last", [3]), 3);

// nop.wast:194
assert_return(() => call($1, "as-select-everywhere", [3]), 3);

// nop.wast:196
assert_return(() => call($1, "as-block-first", []), 2);

// nop.wast:197
assert_return(() => call($1, "as-block-mid", []), 2);

// nop.wast:198
assert_return(() => call($1, "as-block-last", []), 3);

// nop.wast:199
assert_return(() => call($1, "as-block-everywhere", []), 4);

// nop.wast:201
assert_return(() => call($1, "as-loop-first", []), 2);

// nop.wast:202
assert_return(() => call($1, "as-loop-mid", []), 2);

// nop.wast:203
assert_return(() => call($1, "as-loop-last", []), 3);

// nop.wast:204
assert_return(() => call($1, "as-loop-everywhere", []), 4);

// nop.wast:206
assert_return(() => call($1, "as-if-condition", [0]));

// nop.wast:207
assert_return(() => call($1, "as-if-condition", [-1]));

// nop.wast:208
assert_return(() => call($1, "as-if-then", [0]));

// nop.wast:209
assert_return(() => call($1, "as-if-then", [4]));

// nop.wast:210
assert_return(() => call($1, "as-if-else", [0]));

// nop.wast:211
assert_return(() => call($1, "as-if-else", [3]));

// nop.wast:213
assert_return(() => call($1, "as-br-last", [6]), 6);

// nop.wast:214
assert_return(() => call($1, "as-br-everywhere", [7]), 7);

// nop.wast:216
assert_return(() => call($1, "as-br_if-mid", [5]), 5);

// nop.wast:217
assert_return(() => call($1, "as-br_if-last", [6]), 6);

// nop.wast:218
assert_return(() => call($1, "as-br_if-everywhere", [7]), 7);

// nop.wast:220
assert_return(() => call($1, "as-br_table-mid", [5]), 5);

// nop.wast:221
assert_return(() => call($1, "as-br_table-last", [6]), 6);

// nop.wast:222
assert_return(() => call($1, "as-br_table-everywhere", [7]), 7);

// nop.wast:224
assert_return(() => call($1, "as-return-last", [6]), 6);

// nop.wast:225
assert_return(() => call($1, "as-return-everywhere", [7]), 7);

// nop.wast:227
assert_return(() => call($1, "as-call-mid1", [3, 1, 2]), 2);

// nop.wast:228
assert_return(() => call($1, "as-call-mid2", [0, 3, 1]), 2);

// nop.wast:229
assert_return(() => call($1, "as-call-last", [10, 9, -1]), 20);

// nop.wast:230
assert_return(() => call($1, "as-call-everywhere", [2, 1, 5]), -2);

// nop.wast:232
assert_return(() => call($1, "as-unary-last", [30]), 1);

// nop.wast:233
assert_return(() => call($1, "as-unary-everywhere", [12]), 2);

// nop.wast:235
assert_return(() => call($1, "as-binary-mid", [3]), 6);

// nop.wast:236
assert_return(() => call($1, "as-binary-last", [3]), 6);

// nop.wast:237
assert_return(() => call($1, "as-binary-everywhere", [3]), 6);

// nop.wast:239
assert_return(() => call($1, "as-test-last", [0]), 1);

// nop.wast:240
assert_return(() => call($1, "as-test-everywhere", [0]), 1);

// nop.wast:242
assert_return(() => call($1, "as-compare-mid", [3]), 0);

// nop.wast:243
assert_return(() => call($1, "as-compare-last", [3]), 0);

// nop.wast:244
assert_return(() => call($1, "as-compare-everywhere", [3]), 1);

// nop.wast:246
assert_return(() => call($1, "as-grow_memory-last", [2]), 1);

// nop.wast:247
assert_return(() => call($1, "as-grow_memory-everywhere", [12]), 3);

// nop.wast:249
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");

// nop.wast:253
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");

// nop.wast:257
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");

// nop.wast:261
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");
