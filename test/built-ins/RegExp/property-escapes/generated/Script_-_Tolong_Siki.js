// Copyright 2025 Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `Script=Tolong_Siki`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v17.0.0
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
includes: [regExpUtils.js]
---*/

const matchSymbols = buildString({
  loneCodePoints: [],
  ranges: [
    [0x011DB0, 0x011DDB],
    [0x011DE0, 0x011DE9]
  ]
});
testPropertyEscapes(
  /^\p{Script=Tolong_Siki}+$/u,
  matchSymbols,
  "\\p{Script=Tolong_Siki}"
);
testPropertyEscapes(
  /^\p{Script=Tols}+$/u,
  matchSymbols,
  "\\p{Script=Tols}"
);
testPropertyEscapes(
  /^\p{sc=Tolong_Siki}+$/u,
  matchSymbols,
  "\\p{sc=Tolong_Siki}"
);
testPropertyEscapes(
  /^\p{sc=Tols}+$/u,
  matchSymbols,
  "\\p{sc=Tols}"
);

const nonMatchSymbols = buildString({
  loneCodePoints: [],
  ranges: [
    [0x00DC00, 0x00DFFF],
    [0x000000, 0x00DBFF],
    [0x00E000, 0x011DAF],
    [0x011DDC, 0x011DDF],
    [0x011DEA, 0x10FFFF]
  ]
});
testPropertyEscapes(
  /^\P{Script=Tolong_Siki}+$/u,
  nonMatchSymbols,
  "\\P{Script=Tolong_Siki}"
);
testPropertyEscapes(
  /^\P{Script=Tols}+$/u,
  nonMatchSymbols,
  "\\P{Script=Tols}"
);
testPropertyEscapes(
  /^\P{sc=Tolong_Siki}+$/u,
  nonMatchSymbols,
  "\\P{sc=Tolong_Siki}"
);
testPropertyEscapes(
  /^\P{sc=Tols}+$/u,
  nonMatchSymbols,
  "\\P{sc=Tols}"
);
